/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package subsistem_parking;

import diceprox_main.MainForm;
import diceprox_main.UserSession;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Windows
 */
public class CheckOutParkir extends javax.swing.JFrame implements Runnable {

    Socket client;
    BufferedReader in;
    DataOutputStream out;
    Thread t;
    
    /**
     * Creates new form checkOutParkir
     */
    public CheckOutParkir() {
        try {
            initComponents();
            
            //untuk center
            this.setLocationRelativeTo(null);
            
            // Maximize the frame
            setExtendedState(BookParkir.MAXIMIZED_BOTH);
            
            client = new Socket("localhost", 5005);
            in = new BufferedReader(new InputStreamReader(client.getInputStream()));
            out = new DataOutputStream(client.getOutputStream());
            start();
        } catch (IOException ex) {
            System.out.println("Error di CheckOutParkir: " + ex);
        }
    }
    
    private void start() {
        if (t == null) {
            t = new Thread(this, "CheckOutParkir");
            t.start();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JLabel();
        parkingRSVCodeText = new javax.swing.JTextField();
        checkOutButton = new javax.swing.JButton();
        salamTiket = new javax.swing.JLabel();
        bagian_kanan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconBack.png"))); // NOI18N
        back.setPreferredSize(new java.awt.Dimension(120, 125));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 70, 70));

        parkingRSVCodeText.setBackground(new java.awt.Color(207, 219, 229));
        parkingRSVCodeText.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        parkingRSVCodeText.setText("Reservation Code");
        parkingRSVCodeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                parkingRSVCodeTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                parkingRSVCodeTextFocusLost(evt);
            }
        });
        getContentPane().add(parkingRSVCodeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 1020, 67));

        checkOutButton.setBackground(new java.awt.Color(187, 224, 253));
        checkOutButton.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        checkOutButton.setText("Check Out");
        checkOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(checkOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1410, 220, 210, 70));

        salamTiket.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        salamTiket.setForeground(new java.awt.Color(57, 62, 70));
        salamTiket.setText("ENTER YOUR RESERVATION CODE");
        getContentPane().add(salamTiket, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, -1, -1));

        bagian_kanan.setBackground(new java.awt.Color(187, 187, 187));
        bagian_kanan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background_main_kiri.png"))); // NOI18N
        getContentPane().add(bagian_kanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1080));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        MainForm windowPlane = new MainForm();

        if (windowPlane == null || !windowPlane.isVisible()) {
            windowPlane.setVisible(true);
        }

        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void parkingRSVCodeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_parkingRSVCodeTextFocusGained
        if (parkingRSVCodeText.getText().equals("Reservation Code")) {
            parkingRSVCodeText.setText("");
        }
    }//GEN-LAST:event_parkingRSVCodeTextFocusGained

    private void parkingRSVCodeTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_parkingRSVCodeTextFocusLost
        if (parkingRSVCodeText.getText().equals("")) {
            parkingRSVCodeText.setText("Reservation Code");
        }
    }//GEN-LAST:event_parkingRSVCodeTextFocusLost

    private void checkOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutButtonActionPerformed
        try {
            int reservationID = Integer.parseInt(parkingRSVCodeText.getText());
            int userID = userIdForCheckOut(reservationID);           
            String parkingSlot = fetchParkingSlot(reservationID);
            String policeNumber = fetchPoliceNumber(reservationID);
            
            int response = JOptionPane.showConfirmDialog(null, "Apakah benar anda ingin Check Out?", 
                    "Confirmation", JOptionPane.YES_NO_OPTION);
            
            String formattedMessage = "PRK_CHKOUT_TIX~" + reservationID + "~" + parkingSlot + "~" + policeNumber + "~" + UserSession.getUsername() + "\n";
            
            if (response == JOptionPane.YES_OPTION) {
                if (userID == UserSession.getUserId()) {
                    updateCheckOutReservation(reservationID, UserSession.getUserId());
                    
                    out.writeBytes(formattedMessage);
                    
                    JOptionPane.showMessageDialog(this, "Sukses Melakukan Check Out Parkir!", "Notification", JOptionPane.INFORMATION_MESSAGE);
                    
                    MainForm windowPlane = new MainForm();

                    if (windowPlane == null || !windowPlane.isVisible()) {
                        windowPlane.setVisible(true);
                    }
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "User ID berbeda dengan UserID di ReservationID", "Notification", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                System.out.println("User memilih belum");
            }
                    
        } catch (Exception e) {
            System.out.println("Error di button check out: " + e);
        }
    }//GEN-LAST:event_checkOutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOutParkir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOutParkir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOutParkir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOutParkir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOutParkir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JLabel bagian_kanan;
    private javax.swing.JButton checkOutButton;
    private javax.swing.JTextField parkingRSVCodeText;
    private javax.swing.JLabel salamTiket;
    // End of variables declaration//GEN-END:variables

    private static void updateCheckOutReservation(int reservationID, int userID) {
        com.ticketing.services.TicketingServices_Service service = new com.ticketing.services.TicketingServices_Service();
        com.ticketing.services.TicketingServices port = service.getTicketingServicesPort();
        port.updateCheckOutReservation(reservationID, userID);
    }

    private static int userIdForCheckOut(int reservationID) {
        com.ticketing.services.TicketingServices_Service service = new com.ticketing.services.TicketingServices_Service();
        com.ticketing.services.TicketingServices port = service.getTicketingServicesPort();
        return port.userIdForCheckOut(reservationID);
    }
    
    private static String fetchParkingSlot(int reservationID) {
        com.ticketing.services.TicketingServices_Service service = new com.ticketing.services.TicketingServices_Service();
        com.ticketing.services.TicketingServices port = service.getTicketingServicesPort();
        return port.fetchParkingSlot(reservationID);
    }
    
    private static String fetchPoliceNumber(int reservationID) {
        com.ticketing.services.TicketingServices_Service service = new com.ticketing.services.TicketingServices_Service();
        com.ticketing.services.TicketingServices port = service.getTicketingServicesPort();
        return port.fetchPoliceNumber(reservationID);
    }
    
    @Override
    public void run() {
        try {
            
        } catch (Exception e) {
        }
    }
}
